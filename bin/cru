#!/usr/bin/env bash

set -Eeuo pipefail

CONTENT=

function usage() {
	cat <<END
Cron Utility
	add:    cru a [-u user] <unique id> <"min hour day month week command"> [COMMENT]
	delete: cru d [-u user] <unique id> [...more unique ids]
	list:   cru l [-u user]
END
}
function die_usage() {
	{
		usage
		echo "$*"
	} >&2
	exit 1
}
function save() {
	set +e
	echo "${CONTENT}" | crontab -u "${USER}" -
	RET=$?
	if [[ $RET -eq 0 ]]; then
		echo "cru: installed new crontab" >&2
	else
		echo -e "\e[38;5;9mcru: command failed, new crontab try to save is:\e[0;2m"
		echo "$CONTENT"
		echo -ne "\e[0m"
	fi
	exit $RET
}
function filter() {
	local KEY=$1 COMP
	COMP=$(echo "${CONTENT}" | grep -v --fixed-strings -- "#! ${KEY} !#" | cat -s)
	if [[ $COMP != "$CONTENT" ]]; then
		echo "cru: deleting [${KEY}]" >&2
		CONTENT="$COMP"
	fi
}
function add() {
	local KEY=$1 VAL=$2 COMMENT=$3
	if [[ "$COMMENT" ]]; then
		COMMENT=$'\n'"### $COMMENT #! ${KEY} !#"$'\n'
	fi
	CONTENT="$(echo "${CONTENT}" | grep -v --fixed-strings -- "#! ${KEY} !#" | cat -s)
${COMMENT}${VAL} #! ${KEY} !#"
	echo "cru: adding [${KEY}]" >&2
}
function init() {
	CONTENT=$(crontab -u "${USER}" -l 2>/dev/null || :)
	if [[ -z ${CONTENT} ]]; then
		CONTENT="# job definition:
# .---------------- minute (0 - 59)
# |  .------------- hour (0 - 23)
# |  |  .---------- day of month (1 - 31)
# |  |  |  .------- month (1 - 12) OR jan,feb,mar,apr ...
# |  |  |  |  .---- day of week (0 - 6) (Sunday=0 or 7) OR sun,mon,tue,wed,thu,fri,sat
# |  |  |  |  |
# *  *  *  *  * user-name  command to be executed
"
	fi
}

if [[ $# -eq 0 ]]; then
	usage
	exit
fi

USER=$(id -nu)
OP=${1:-''}
shift

while getopts "u:" opt; do
	case "$opt" in
	u)
		USER="$OPTARG"
		shift
		shift
		;;
	[?])
		exit 1
		;;
	:)
		exit 1
		;;
	esac
done

case "$OP" in
a)
	if [[ $# -lt 2 ]] || [[ $# -gt 3 ]]; then
		die_usage "Invalid append input: requires 2-3 arguments"
	fi

	TAG=$1
	CMD=$2
	COMMENT=${3:-}

	init
	add "$TAG" "$CMD" "$COMMENT"
	save
	;;
d)
	init
	for i; do
		filter "$i"
	done
	save
	;;
l)
	crontab -u "${USER}" -l
	;;
*)
	die_usage "Invalid arguments: $OP $*"
	;;
esac
